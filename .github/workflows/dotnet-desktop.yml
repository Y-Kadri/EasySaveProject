name: Build and Quality Check

on: [push, pull_request]

env:
  SOLUTION_PATH: EasySave_Project/EasySave_Project.sln
  DOTNET_VERSION: '8.0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}
        continue-on-error: true  # Permet de continuer m√™me si cette √©tape √©choue

      - name: Build project
        run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release
        continue-on-error: true  # Continue en cas d'erreur de build

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --no-restore --configuration Release
        continue-on-error: true  # Continue m√™me si les tests √©chouent

  commit_message_validation:
    runs-on: ubuntu-latest
    name: Commit Message Validation
    steps:
      - uses: actions/checkout@v3

      - id: verify_commit_message
        uses: uptownaravi/verify-commit-message-action@v2
        with:
          regex: '^(hotfix|release|feature|main|develop)\[.+\] : .+'
        continue-on-error: true  # Continue m√™me si la validation √©choue

  notify-discord:
    needs: [build, commit_message_validation]  # Ex√©cuter apr√®s les jobs build et validation du message
    if: always()  # Ex√©cute toujours, m√™me en cas d'√©chec des jobs pr√©c√©dents
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
                  "username": "CI/CD Pipeline",
                  "avatar_url": "https://cdn-icons-png.flaticon.com/512/5968/5968322.png",
                  "embeds": [{
                    "title": "üö® La pipeline a √©chou√© !",
                    "description": "Une erreur s'est produite lors de l'ex√©cution de la pipeline sur la branche `${{ github.ref_name }}`.",
                    "color": 16711680,
                    "fields": [
                      {
                        "name": "Nom du Workflow",
                        "value": "${{ github.workflow }}"
                      },
                      {
                        "name": "Lien vers les logs",
                        "value": "[Voir les d√©tails](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
                      }
                    ]
                  }]
                }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}